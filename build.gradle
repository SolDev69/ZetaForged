plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		name = "Portals"
		url = "http://maven.kyrptonaught.dev"
		allowInsecureProtocol = true
	}
	maven {
		url "https://repsy.io/mvn/zeta/stuff/"
	}
	//flatDir {
	//	dirs 'lib'
	//}
	maven { url 'https://jitpack.io' }
}

loom {
	accessWidenerPath = file('src/main/resources/zetaforged.accesswidener')
}

dependencies {
	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.kyrptonaught:customportalapi:${project.portalapi_version}"
	include "net.kyrptonaught:customportalapi:${project.portalapi_version}"
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	/*
		Other apis
	 */
	//implementation ":minecraft_rg"
	modImplementation "com.rdvdev2:disable-custom-worlds-advice:1.3"
	include "com.rdvdev2:disable-custom-worlds-advice:1.3"
	modImplementation "me.zeroeightsix:fiber:${project.fiberversion}"
	include "me.zeroeightsix:fiber:${project.fiberversion}"
	//modImplementation "zeta.zetaforged:zetas-api:1.0.0-alpha.2"
	//include "zeta.zetaforged:zetas-api:1.0.0-alpha.2"
	modImplementation "com.github.paulevsGitch:BCLib:${project.bclib_version}"
	include "com.github.paulevsGitch:BCLib:${project.bclib_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 16
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
	  gpr(MavenPublication) {

            artifactId = "zetaforged"

            pom {
                name = "ZetaForged"
                description = "Some random 1.17 mod idk"
                url = "https://www.curseforge.com/minecraft/mc-mods/zetaforged"
                scm {
                    connection = "scm:git:https://github.com/TwelvianZeta/ZetaForged.git"
                    developerConnection = "scm:git:https://github.com/TwelvianZeta/ZetaForged.git"
                    url = "https://github.com/TwelvianZeta/ZetaForged"
                }
            }
            artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
            }
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/TwelvianZeta/ZetaForged")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}
